generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String?   @unique
  leetCodeUsername String? @unique
  isVerified     Boolean  @default(false)
  image         String?
  createdRooms     Room[]    @relation("RoomCreator")
  participations   RoomParticipant[]
  stats            UserStats?
}

model Notification {
  id        String   @id @default(cuid())
  roomId    String
  room      Room     @relation(fields: [roomId], references: [id])
  message   String
  color String @default("gray")
  createdAt DateTime @default(now())
}

model Room {
  id          String    @id @default(cuid())
  name        String 
  code        String    @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  creator     User      @relation("RoomCreator", fields: [creatorId], references: [id])
  creatorId   String
  participants RoomParticipant[]
  notifications Notification[]
}

model RoomParticipant {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  room      Room     @relation(fields: [roomId], references: [id])
  roomId    String
  joinedAt  DateTime @default(now())
  @@unique([userId, roomId])
}


model UserStats{
  id                String @id @default(cuid())
  user              User   @relation(fields: [userId], references: [id])
  userId            String @unique
  easyQuestionsSolved   Int 
  mediumQuestionsSolved Int 
  hardQuestionsSolved   Int 
  contestRating Int
  globalRanking Int
  attendedContests Int
  lastUpdated       DateTime @default(now())
}

