// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id         String  @id @default(uuid()) @db.Uuid
  firstName  String? @map("first_name")
  lastName   String? @map("last_name")
  user       User    @relation(fields: [id], references: [id], onDelete: Cascade)
}
model User {
  id            String    @id @default(cuid())
  email         String?   @unique
  leetCodeUsername String? @unique
  isVerified     Boolean  @default(false)
  image         String?
  createdRooms     Room[]    @relation("RoomCreator")
  participations   RoomParticipant[]
  stats            UserStats?
}

model Notification {
  id        String   @id @default(cuid())
  roomId    String
  room      Room     @relation(fields: [roomId], references: [id])
  message   String
  createdAt DateTime @default(now())
}

model Room {
  id          String    @id @default(cuid())
  name        String    @unique
  code        String    @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  creator     User      @relation("RoomCreator", fields: [creatorId], references: [id])
  creatorId   String
  participants RoomParticipant[]
  notifications Notification[]
}

model RoomParticipant {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  room      Room     @relation(fields: [roomId], references: [id])
  roomId    String
  joinedAt  DateTime @default(now())
  @@unique([userId, roomId])
}


model UserStats{
  id                String @id @default(cuid())
  user              User   @relation(fields: [userId], references: [id])
  userId            String @unique
  easyQuestionsSolved   Int 
  mediumQuestionsSolved Int 
  hardQuestionsSolved   Int 
  contestRating Int
  globalRanking Int
  attendedContests Int
  lastUpdated       DateTime @default(now())
}

// {"query":"\n    query recentAcSubmissions($username: String!, $limit: Int!) {\n  recentAcSubmissionList(username: $username, limit: $limit) {\n    id\n    title\n    titleSlug\n    timestamp\n  }\n}\n    ","variables":{"username":"virinci","limit":15},"operationName":"recentAcSubmissions"}
